let mapleader = " "         " Spacebar map leader
nmap , :

" mappings: for long lines over multiple rows, do proper navigation
map j gj
map k gk

" Easier navigations through windows
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Close the current buffer and move to the previous one
nmap <leader>bq :bp <BAR> bd #<CR>

" Map Ctrl-Backspace to delete the previous word in insert mode.
:imap <C-BS> <C-W>"

" ==================== Fugitive ====================
nnoremap <leader>ga :Git add %:p<CR><CR>
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gp :Gpush<CR>
nnoremap <leader>gc :Gcommit<CR>
vnoremap <leader>gb :Gblame<CR>"

" ==================== Surround ====================
vmap <leader>" S"lvi"
vmap <leader>' S'lvi'
vmap <leader>` S`lvi`
vmap <leader>( S )lvi(
vmap <leader>{ S }lvi{
vmap <leader>[ S ]lvi[
vmap <leader>< S>lvi<

" ==================== NerdTree ====================
noremap <Leader>e :NERDTreeToggle<cr>

" ==================== UltiSnips ====================
let g:UltiSnipsExpandTrigger="<C-j>"
"inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"

" ==================== Deoplete ====================
inoremap <silent><expr> <TAB>
\ pumvisible() ? "\<C-n>" :
\ <SID>check_back_space() ? "\<TAB>" :
\ deoplete#mappings#manual_complete()
function! s:check_back_space() abort "{{{
let col = col('.') - 1
return !col || getline('.')[col - 1]  =~ '\s'
endfunction"}}}

imap <expr> <CR> pumvisible() ? "\<c-y>" : "<Plug>delimitMateCR"
imap kj <Esc>
map <F7> mzgg=G`z
